{"createdAt":"2025-05-08T18:40:48.930Z","updatedAt":"2025-05-12T21:06:02.925Z","id":"ubNmcn4jJIlwgdkz","name":"⬆️ Backup n8n credentials to Github","active":true,"nodes":[{"parameters":{"content":"## Backup to GitHub \nThis workflow will backup all instance credentials to GitHub.\n\nThe files are saved `ID.json` for the filename.\n\n### Setup\nOpen `Globals` node and update the values below 👇\n\n- **repo.owner:** your Github username\n- **repo.name:** the name of your repository\n- **repo.path:** the folder to use within the repository. If it doesn't exist it will be created.\n\n\nIf your username was `john-doe` and your repository was called `n8n-backups` and you wanted the credentials to go into a `credentials` folder you would set:\n\n- repo.owner - john-doe\n- repo.name - n8n-backups\n- repo.path - credentials/\n\n\nThe workflow calls itself using a subworkflow, to help reduce memory usage.","height":596.4810912485963,"width":365.19481715599653,"color":4},"id":"7387fbb9-7c85-4127-b92d-d18ddad3de98","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[-760,-340],"typeVersion":1},{"parameters":{"command":"npx n8n export:credentials --all --decrypted"},"id":"73ce601f-8c0e-41a4-ba4a-e061467a9d9f","name":"Execute Command","type":"n8n-nodes-base.executeCommand","position":[-600,1220],"typeVersion":1},{"parameters":{"jsCode":"// Function to beautify JSON\nfunction beautifyJson(jsonString) {\n  try {\n    // Parse the JSON string\n    const jsonObject = JSON.parse(jsonString);\n\n    // Format the JSON with indentation\n    return jsonObject; // Return the parsed object directly\n  } catch (error) {\n    // Return the error message if JSON is invalid\n    return `Invalid JSON: ${error.message}`;\n  }\n}\n\n// Retrieve the JSON object from the input data\nconst input = $input.all()[0].json;\n\n// Extract the JSON string from the stdout field\nconst jsonString = input.stdout.match(/\\[{.*}\\]/s);\n\n// Check if a valid JSON string is found\nif (!jsonString) {\n  return {\n    json: {\n      error: \"No valid JSON string found in stdout.\"\n    }\n  };\n}\n\n// Beautify the JSON\nconst beautifiedJson = beautifyJson(jsonString[0]);\n\n// Output the beautified JSON, ensuring each entry is in an object with a 'json' key\nconst output = beautifiedJson.map(entry => ({ json: entry }));\n\n// Return the output\nreturn output;\n"},"id":"18e22a50-9850-42a1-86e9-e8e874d3d0e3","name":"JSON formatting","type":"n8n-nodes-base.code","position":[-420,1220],"typeVersion":2},{"parameters":{"resource":"file","operation":"get","owner":"={{$node[\"Globals1\"].json[\"repo\"][\"owner\"]}}","repository":"={{$node[\"Globals1\"].json[\"repo\"][\"name\"]}}","filePath":"={{$node[\"Globals1\"].json[\"repo\"][\"path\"]}}{{ $json.id }}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"6fe09b2f-d0aa-4bd0-8fd7-25c3719b6035","name":"GitHub","type":"n8n-nodes-base.github","position":[80,1260],"typeVersion":1,"alwaysOutputData":true,"webhookId":"7e856775-5c8d-45f6-a8ef-15a482b66ccb","retryOnFail":true,"maxTries":5,"credentials":{"githubApi":{"id":"iGQWomWxVx4FvkiE","name":"GitHub account"}},"continueOnFail":true},{"parameters":{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"16a9182d-059d-4774-ba95-654fb4293fdb","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"020ed467-090b-44b3-a218-a77f067c1f50","name":"If","type":"n8n-nodes-base.if","position":[280,1280],"typeVersion":2.2},{"parameters":{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"e0c66624-429a-4f1f-bf7b-1cc1b32bad7b","operator":{"type":"string","operation":"notEquals"},"leftValue":"={{ $json.content }}","rightValue":"={{ $('Loop Over Items1').item.json.toJsonString() }}"}]},"options":{}},"id":"8d0ba4a5-a2aa-4cab-ace7-e9910b1813f4","name":"If1","type":"n8n-nodes-base.if","position":[1000,1560],"typeVersion":2.2},{"parameters":{"jsCode":"let items = $input.all()\n\nfor (item of items) {\n    item.json.content = Buffer.from(item.json.content, 'base64').toString('utf8')\n}\n\nreturn items;\n"},"id":"047794f0-9513-4b6c-a422-e81bc82b5c24","name":"Code","type":"n8n-nodes-base.code","position":[680,1260],"typeVersion":2},{"parameters":{"resource":"file","owner":"={{$node[\"Globals1\"].json[\"repo\"][\"owner\"]}}","repository":"={{$node[\"Globals1\"].json[\"repo\"][\"name\"]}}","filePath":"={{$node[\"Globals1\"].json[\"repo\"][\"path\"]}}{{ $('Loop Over Items1').item.json.id }}.json","fileContent":"={{ $('Loop Over Items1').item.json.toJsonString()  }}","commitMessage":"=[N8N Backup] {{ $('Loop Over Items1').item.json.name }}.json"},"id":"3cb4c56e-012d-4a59-9b44-6e8ec12cbe05","name":"Create new file and commit","type":"n8n-nodes-base.github","position":[460,1440],"typeVersion":1,"webhookId":"7ce407e1-69fc-4f04-8f05-056dddd82b2b","retryOnFail":true,"maxTries":5,"credentials":{"githubApi":{"id":"iGQWomWxVx4FvkiE","name":"GitHub account"}}},{"parameters":{"resource":"file","operation":"edit","owner":"={{$node[\"Globals1\"].json[\"repo\"][\"owner\"]}}","repository":"={{$node[\"Globals1\"].json[\"repo\"][\"name\"]}}","filePath":"={{$node[\"Globals1\"].json[\"repo\"][\"path\"]}}{{ $('Loop Over Items1').item.json.id }}.json","fileContent":"={{ $('Loop Over Items1').item.json.toJsonString()  }}","commitMessage":"=[N8N Backup] {{ $('Loop Over Items1').item.json.name }}.json"},"id":"8528835f-f12a-4227-9f85-1d316a1cc0e0","name":"Update file content and commit","type":"n8n-nodes-base.github","position":[1360,1760],"typeVersion":1,"webhookId":"8e8cde61-fee7-4bd5-bce1-657670f483a3","credentials":{"githubApi":{"id":"iGQWomWxVx4FvkiE","name":"GitHub account"}}},{"parameters":{"values":{"string":[{"name":"repo.owner","value":"fer"},{"name":"repo.name","value":"atomicflow"},{"name":"repo.path","value":"n8n/credentials/"}]},"options":{}},"id":"612a8141-eb83-4cf1-bca4-e2818a6010d7","name":"Globals1","type":"n8n-nodes-base.set","position":[-780,1200],"typeVersion":1},{"parameters":{"options":{}},"id":"56585091-0a10-41a0-9b19-8445fffd52d2","name":"Loop Over Items1","type":"n8n-nodes-base.splitInBatches","position":[-140,1220],"executeOnce":false,"typeVersion":3},{"parameters":{"rule":{"interval":[{"field":"hours"}]}},"id":"e27987f0-1dcc-4ee5-9822-e44c8173b864","name":"Schedule Trigger1","type":"n8n-nodes-base.scheduleTrigger","position":[-1000,1200],"typeVersion":1.2},{"parameters":{"content":"Check if there are any changes in the workflow","height":80},"id":"952c0d67-823a-4fd1-9a18-e09e36a5397e","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[1260,1680],"typeVersion":1},{"parameters":{"content":"Create a new file for the workflow","height":80},"id":"c5f5fbcb-3fb6-4d28-921b-0dee379ca164","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","position":[220,1540],"typeVersion":1},{"parameters":{"content":"Check if file exists in the repository","height":80},"id":"d9bd8c51-eef0-448d-8d0f-b82bfe3788e1","name":"Sticky Note7","type":"n8n-nodes-base.stickyNote","position":[120,1180],"typeVersion":1}],"connections":{"Execute Command":{"main":[[{"node":"JSON formatting","type":"main","index":0}]]},"JSON formatting":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"GitHub":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[{"node":"Code","type":"main","index":0}],[{"node":"Create new file and commit","type":"main","index":0}]]},"If1":{"main":[[{"node":"Update file content and commit","type":"main","index":0}],[{"node":"Loop Over Items1","type":"main","index":0}]]},"Code":{"main":[[{"node":"If1","type":"main","index":0}]]},"Create new file and commit":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"Update file content and commit":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"Globals1":{"main":[[{"node":"Execute Command","type":"main","index":0}]]},"Loop Over Items1":{"main":[[],[{"node":"GitHub","type":"main","index":0}]]},"Schedule Trigger1":{"main":[[{"node":"Globals1","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[20]},"node:Schedule Trigger1":{"recurrenceRules":[]}},"meta":null,"pinData":{},"versionId":"64fa8333-a466-4fd1-93c2-f68be7d30c97","triggerCount":1,"tags":[]}