{"createdAt":"2025-05-08T18:40:48.977Z","updatedAt":"2025-05-08T18:40:48.977Z","id":"MG2pl2jHPW6gFBk5","name":"Restore from GH","active":false,"nodes":[{"parameters":{},"id":"d2c35251-3e46-4ba3-a648-9fd257901694","name":"On clicking 'execute'","type":"n8n-nodes-base.manualTrigger","position":[-340,440],"typeVersion":1},{"parameters":{"values":{"string":[{"name":"repo.owner","value":"atomicflow"},{"name":"repo.name","value":"backup"},{"name":"repo.path","value":"workflows"}]},"options":{}},"id":"81175623-5072-438a-ab5e-30f2fb1908b2","name":"Globals","type":"n8n-nodes-base.set","position":[-140,340],"typeVersion":1},{"parameters":{"content":"## Restore Workflow from GitHub\nThis workflow will restore backed-up workflows from Github. \nIt is launch by testing the workflow\n\n### Setup\nOpen Globals and update the values below\n**repo.owner:** This is your Github username\n**repo.name:** This is the name of your repository\n**repo.path:** This is the folder where your workflows are saved, within the repository.\n\nIf your username was `n8n-io` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\n\nrepo.owner - n8n-io\nrepo.name - n8n-backups\nrepo.path - workflows","height":464.79920462713443,"width":389.78906250000017,"color":2},"id":"a0a6b209-d2a9-4dac-a965-35d384d5ccd5","name":"Note","type":"n8n-nodes-base.stickyNote","position":[-780,260],"typeVersion":1},{"parameters":{},"id":"5295a346-2c3a-484e-833c-ed706dc164ee","name":"Workflow name already exists","type":"n8n-nodes-base.noOp","position":[1540,540],"typeVersion":1},{"parameters":{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"063d51c7-0b7a-48a4-82b3-76b370fc4265","operator":{"type":"string","operation":"exists","singleValue":true},"leftValue":"={{ $('Merge Github and n8n workflows - Keep only non existing workflows based on the name').item.json.name }}","rightValue":""}]},"options":{}},"id":"5b4486f3-c325-4ea8-a235-9056091fdc02","name":"If workflow already exists","type":"n8n-nodes-base.if","position":[1220,420],"typeVersion":2},{"parameters":{"assignments":{"assignments":[{"id":"6be8c184-8fb7-47a9-ad42-d0dc3db1eea4","name":"name","type":"string","value":"={{ $json.name }}"}]},"options":{}},"id":"a060398f-771b-46f7-b103-6f63958efa81","name":"Set n8n existing workflows names","type":"n8n-nodes-base.set","position":[680,540],"typeVersion":3.3},{"parameters":{"resource":"file","operation":"list","owner":{"__rl":true,"value":"={{ $json.repo.owner }}","mode":"name"},"repository":{"__rl":true,"value":"={{ $json.repo.name }}","mode":"name"},"filePath":"={{ $json.repo.path }}"},"id":"8d58f572-2011-4cbc-b24d-dc50f14214fd","name":"GitHub - get all files","type":"n8n-nodes-base.github","position":[80,200],"typeVersion":1,"webhookId":"183176d3-6394-4d5f-8461-6912741fb282","credentials":{"githubApi":{"id":"iGQWomWxVx4FvkiE","name":"GitHub account"}}},{"parameters":{"filters":{},"requestOptions":{}},"id":"63360653-10b9-4b56-913a-1e2c9f5168e8","name":"n8n - get all workflows","type":"n8n-nodes-base.n8n","position":[-140,540],"typeVersion":1,"credentials":{"n8nApi":{"id":"bvv7auGFkoB3ieA4","name":"n8n account"}}},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"mode":"name","value":"={{ $json.repo.owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $json.repo.name }}"},"filePath":"={{ $json.path }}","asBinaryProperty":false,"additionalParameters":{}},"id":"813f4a1d-1c90-4af1-b499-a8ba94f69110","name":"GitHub - get each file","type":"n8n-nodes-base.github","position":[500,320],"typeVersion":1,"webhookId":"05b63214-075a-449f-8e34-6487e1e43f21","credentials":{"githubApi":{"id":"iGQWomWxVx4FvkiE","name":"GitHub account"}}},{"parameters":{"assignments":{"assignments":[{"id":"714b0cfd-9f06-4e2f-b73d-30ef39dc40e3","name":"content","type":"string","value":"={{ $json.content.base64Decode() }}"},{"id":"6f48ed58-d55a-4ee4-8cf2-373941aaa341","name":"name","type":"string","value":"={{ $json.name.replace(\".json\", \"\") }}"}]},"options":{}},"id":"7c228ff5-486e-4d59-973d-29cc42391053","name":"Set name and content","type":"n8n-nodes-base.set","position":[700,320],"typeVersion":3.3},{"parameters":{"operation":"create","workflowObject":"={{ $('Set name and content').item.json.content }}","requestOptions":{}},"id":"9b7a79fa-2dbf-4c45-babc-1d3786ab487a","name":"n8n - create workflow","type":"n8n-nodes-base.n8n","position":[1540,320],"typeVersion":1,"credentials":{"n8nApi":{"id":"bvv7auGFkoB3ieA4","name":"n8n account"}}},{"parameters":{"content":"## Get all Github files\n1. List all the files from your repository\n2. Get each file as a JSON. \n3. The content, retrieved as base64, is converted in the \"Set Name and Content\" node\n\n\nThe \"Set Name and Content\" node creates a list of workflows with name and content, in order to compare it with the existing n8n workflows in the workspace.","height":478.9952882299376,"width":861.4145066375679,"color":2},"id":"146a42e8-4dff-4a0d-892d-6cbc28ff977c","name":"Note1","type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1},{"parameters":{"mode":"combine","combinationMode":"multiplex","options":{}},"id":"14f79f95-f276-488b-bf63-83d444a6706c","name":"Merge globals and files","type":"n8n-nodes-base.merge","position":[300,320],"typeVersion":2.1},{"parameters":{"mode":"combine","mergeByFields":{"values":[{"field1":"name","field2":"name"}]},"joinMode":"keepNonMatches","outputDataFrom":"input1","options":{}},"id":"6a57cd25-5717-4108-b63d-dbefa8b2b0c9","name":"Merge Github and n8n workflows - Keep only non existing workflows based on the name","type":"n8n-nodes-base.merge","position":[1000,420],"typeVersion":2.1,"alwaysOutputData":true},{"parameters":{"content":"## Merge Github and n8n workflows\n\nHere, we only keep the workflows from Github that doesn't already exist in n8n workspace, based on the name","height":196.65095879641083,"width":260.44696745223945,"color":2},"id":"ec2036b5-1a73-4c1e-9af9-497deda2c233","name":"Note2","type":"n8n-nodes-base.stickyNote","position":[920,600],"typeVersion":1},{"parameters":{"content":"## Create n8n workflow\n\nCreate the n8n workflow using:\n- Content saved in Github\n- Name of the file in Github\n\n\nIf the workflow name already exist in n8n, then the workflow is not created - to avoid duplicates.","height":237.66186698228626,"width":344.0461264465236,"color":2},"id":"474a686e-f578-4b31-914f-e31bd2602810","name":"Note3","type":"n8n-nodes-base.stickyNote","position":[1720,380],"typeVersion":1},{"parameters":{"content":"## Get existing n8n workflows\n\n1. Get all workflows\n2. Prepare a list of workflows in order to compare it with the workflows saved in the Github repo.","height":182.45487519360773,"width":378.7476641422645,"color":2},"id":"157a82af-76f6-4e92-8a44-f20552404713","name":"Note4","type":"n8n-nodes-base.stickyNote","position":[80,640],"typeVersion":1},{"parameters":{"content":"## WIP Restore Credentials from GitHub \nThis workflow will restore all instance credentials from GitHub backups.\n\n### Setup\nOpen `Globals` node and update the values below ðŸ‘‡\n\n- **repo.owner:** your Github username\n- **repo.name:** the name of your repository\n- **repo.path:** the folder to use within the repository.\n\n\nIf your username was `john-doe` and your repository was called `n8n-backups` and you wanted the credentials to go into a `credentials` folder you would set:\n\n- repo.owner - john-doe\n- repo.name - n8n-backups\n- repo.path - credentials/\n","height":420,"width":540},"id":"1b98315d-a988-4e50-bf3e-40e423f3b54d","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[-920,1080],"typeVersion":1},{"parameters":{"resource":"credential","name":"={{ $json.data.name }}","credentialTypeName":"={{ $json.data.type }}","data":"={{ JSON.stringify($json.data.data) }}","requestOptions":{}},"id":"eeafbf0c-c680-4c3a-a80d-8b413ad5ea5b","name":"Restore n8n Credentials","type":"n8n-nodes-base.n8n","position":[1140,1260],"typeVersion":1,"credentials":{"n8nApi":{"id":"bvv7auGFkoB3ieA4","name":"n8n account"}}},{"parameters":{"values":{"string":[{"name":"repo.owner","value":"atomicflow"},{"name":"repo.name","value":"backup"},{"name":"repo.path","value":"credentials"}]},"options":{}},"id":"d6f4e4c5-5a16-4b32-881d-8a30d1aff2be","name":"Globals1","type":"n8n-nodes-base.set","position":[-100,1160],"typeVersion":1},{"parameters":{},"id":"56441f34-3880-40f8-9f7d-fd32a26e45ef","name":"Workflow name already exists1","type":"n8n-nodes-base.noOp","position":[1200,1520],"typeVersion":1},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"063d51c7-0b7a-48a4-82b3-76b370fc4265","operator":{"type":"string","operation":"exists","singleValue":true},"leftValue":"={{ $('Merge Github and n8n workflows - Keep only non existing workflows based on the name1').item.json.name }}","rightValue":""}],"combinator":"and"},"options":{}},"id":"3bbf303a-d2c8-4a01-9e4c-dc9b7c5f00ff","name":"If workflow already exists1","type":"n8n-nodes-base.if","position":[920,1400],"typeVersion":2},{"parameters":{"resource":"file","operation":"list","owner":{"__rl":true,"value":"={{ $json.repo.owner }}","mode":"name"},"repository":{"__rl":true,"value":"={{ $json.repo.name }}","mode":"name"},"filePath":"={{ $json.repo.path }}"},"id":"fcf58529-3db9-4f6e-bd2c-7aca6fffd65e","name":"GitHub - get all files1","type":"n8n-nodes-base.github","position":[120,1020],"typeVersion":1,"webhookId":"183176d3-6394-4d5f-8461-6912741fb282","credentials":{"githubApi":{"id":"iGQWomWxVx4FvkiE","name":"GitHub account"}}},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"mode":"name","value":"={{ $json.repo.owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $json.repo.name }}"},"filePath":"={{ $json.path }}","asBinaryProperty":false,"additionalParameters":{}},"id":"04a96550-3c92-4290-a024-9e26b3d7fa4d","name":"GitHub - get each file1","type":"n8n-nodes-base.github","position":[540,1140],"typeVersion":1,"webhookId":"05b63214-075a-449f-8e34-6487e1e43f21","retryOnFail":true,"maxTries":5,"credentials":{"githubApi":{"id":"iGQWomWxVx4FvkiE","name":"GitHub account"}}},{"parameters":{"assignments":{"assignments":[{"id":"714b0cfd-9f06-4e2f-b73d-30ef39dc40e3","name":"content","type":"string","value":"={{ $json.content.base64Decode() }}"},{"id":"6f48ed58-d55a-4ee4-8cf2-373941aaa341","name":"name","type":"string","value":"={{ $json.name.replace(\".json\", \"\") }}"}]},"options":{}},"id":"dd097137-26f8-44e5-bdb1-2213e152ba88","name":"Set name and content1","type":"n8n-nodes-base.set","position":[740,1140],"typeVersion":3.3},{"parameters":{"mode":"combine","combinationMode":"multiplex","options":{}},"id":"8bdb2f39-b6e7-4c8d-b13f-a98fc12cd806","name":"Merge globals and files1","type":"n8n-nodes-base.merge","position":[340,1140],"typeVersion":2.1},{"parameters":{"mode":"combine","mergeByFields":{"values":[{"field1":"name","field2":"name"}]},"joinMode":"keepNonMatches","outputDataFrom":"input1","options":{}},"id":"fbd74e6f-5aaf-489c-99d2-420462cf3d4d","name":"Merge Github and n8n workflows - Keep only non existing workflows based on the name1","type":"n8n-nodes-base.merge","position":[700,1400],"typeVersion":2.1,"alwaysOutputData":true},{"parameters":{"path":"4fb43156-911f-46cd-a921-c7c964633ef4","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-340,1340],"id":"5785584c-495a-4d65-92a9-a8bab99fbc17","name":"Webhook","webhookId":"4fb43156-911f-46cd-a921-c7c964633ef4"}],"connections":{"Globals":{"main":[[{"node":"GitHub - get all files","type":"main","index":0},{"node":"Merge globals and files","type":"main","index":1}]]},"Set name and content":{"main":[[{"node":"Merge Github and n8n workflows - Keep only non existing workflows based on the name","type":"main","index":0}]]},"On clicking 'execute'":{"main":[[{"node":"Globals","type":"main","index":0},{"node":"n8n - get all workflows","type":"main","index":0}]]},"GitHub - get all files":{"main":[[{"node":"Merge globals and files","type":"main","index":0}]]},"GitHub - get each file":{"main":[[{"node":"Set name and content","type":"main","index":0}]]},"Merge globals and files":{"main":[[{"node":"GitHub - get each file","type":"main","index":0}]]},"n8n - get all workflows":{"main":[[{"node":"Set n8n existing workflows names","type":"main","index":0}]]},"If workflow already exists":{"main":[[{"node":"n8n - create workflow","type":"main","index":0}],[{"node":"Workflow name already exists","type":"main","index":0}]]},"Set n8n existing workflows names":{"main":[[{"node":"Merge Github and n8n workflows - Keep only non existing workflows based on the name","type":"main","index":1}]]},"Merge Github and n8n workflows - Keep only non existing workflows based on the name":{"main":[[{"node":"If workflow already exists","type":"main","index":0}]]},"Globals1":{"main":[[{"node":"GitHub - get all files1","type":"main","index":0},{"node":"Merge globals and files1","type":"main","index":1}]]},"If workflow already exists1":{"main":[[{"node":"Restore n8n Credentials","type":"main","index":0}],[{"node":"Workflow name already exists1","type":"main","index":0}]]},"GitHub - get all files1":{"main":[[{"node":"Merge globals and files1","type":"main","index":0}]]},"GitHub - get each file1":{"main":[[{"node":"Set name and content1","type":"main","index":0}]]},"Set name and content1":{"main":[[{"node":"Merge Github and n8n workflows - Keep only non existing workflows based on the name1","type":"main","index":0}]]},"Merge globals and files1":{"main":[[{"node":"GitHub - get each file1","type":"main","index":0}]]},"Merge Github and n8n workflows - Keep only non existing workflows based on the name1":{"main":[[{"node":"If workflow already exists1","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"Globals1","type":"main","index":0},{"node":"Merge Github and n8n workflows - Keep only non existing workflows based on the name1","type":"main","index":1}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":null,"versionId":"e0af7a16-9b6b-4b3a-b62a-e9dc24ce866a","triggerCount":0,"tags":[]}